;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(vc-revision-history Man-topic-history erc-nick-history-list erc-server-history-list face-name-history compile-history eww-prompt-history grep-find-history gnus-group-history org-refile-history org-link--history org-roam-node-history flycheck-read-checker-history xref--read-identifier-history magit-revision-history org-read-date-history query-replace-history buffer-name-history file-name-history minibuffer-history read-char-history ido-buffer-history consult--find-history ido-file-history consult--crm-history extended-command-history consult--line-history consult--grep-history consult-imenu--history consult--buffer-history empty-history counsel-M-x-history))
(setq vc-revision-history '("giza-olympia-ignazio" "giza_feature_NewContentFeaturesAndNFT" "giza-olympia-ignazio" "olympia" "giza-olympia-ignazio" "olympia"))
(setq Man-topic-history '(#("gpg(1)" 0 6 (help-echo "OpenPGP encryption and signing tool"))))
(setq erc-nick-history-list '("benjamin_matterhorn"))
(setq erc-server-history-list '("irc.libera.chat" "web.libera.chat"))
(setq face-name-history '("diff-added" "rc-user-offline-face" "rc-participant-face" "rc-username-face"))
(setq compile-history '("make -k "))
(setq eww-prompt-history '("test" "https://joystream.gitbook.io/joystream-handbook/subsystems/video-nfts" "cargo tests ignored" "what is a gpg subkey" "gpg uid and sub" "how to generate a pgp keyword" "can I pay sourcehut in crypto" "rust emacs build tag table" "magit no =f option" "magit diff two files in different branches" "magit diff two branches" "expected dot for key 'package.version'" "keybase" "emacs keybase interface" "borland theme" "high contrast emacs theme" "emacs high contrast dark theme" "emacs dark theme" "emacs dashboard" "org disable variable pitch" "set font for org mode" "org mode no ligatures" "use pacakage bind map" "emacs org mode dashboard" "eww emacs configuration"))
(setq grep-find-history '("find . -type f -exec grep --color -nH --null -e next \\{\\} +"))
(setq gnus-group-history '(#("nndraft:queue" 0 1 (face completions-first-difference completion-score 0.0))))
(setq org-refile-history '("Visit grandparents (todo.org)"))
(setq org-roam-node-history '("pgp keypair" #("constant product market maker                                                                                                                                                                                    " 0 199 (node #s(org-roam-node "/home/ignazio/Documents/wiki/20220102141557-constant_product_market_maker.org" "constant product market maker" nil (25068 17512 14370 38000) (25068 17512 2370 379000) "bed0ca38-34ad-4e52-9175-5f5253f1ae67" 0 1 nil nil nil nil "constant product market maker" (("CATEGORY" . "20220102141557-constant_product_market_maker") ("ID" . "bed0ca38-34ad-4e52-9175-5f5253f1ae67") ("BLOCKED" . "") ("FILE" . "/home/ignazio/Documents/wiki/20220102141557-constant_product_market_maker.org") ("PRIORITY" . "B")) nil nil nil nil)) 199 209 (face org-tag node #s(org-roam-node "/home/ignazio/Documents/wiki/20220102141557-constant_product_market_maker.org" "constant product market maker" nil (25068 17512 14370 38000) (25068 17512 2370 379000) "bed0ca38-34ad-4e52-9175-5f5253f1ae67" 0 1 nil nil nil nil "constant product market maker" (("CATEGORY" . "20220102141557-constant_product_market_maker") ("ID" . "bed0ca38-34ad-4e52-9175-5f5253f1ae67") ("BLOCKED" . "") ("FILE" . "/home/ignazio/Documents/wiki/20220102141557-constant_product_market_maker.org") ("PRIORITY" . "B")) nil nil nil nil))) #("uniswap                                                                                                                                                                                                          " 0 199 (node #s(org-roam-node "/home/ignazio/Documents/wiki/20220102141430-uniswap.org" "uniswap" nil (25041 42396 809117 170000) (25041 42396 789117 265000) "0d71e13b-f6b0-440b-aabb-f1ea4414371a" 0 1 nil nil nil nil "uniswap" (("CATEGORY" . "20220102141430-uniswap") ("ID" . "0d71e13b-f6b0-440b-aabb-f1ea4414371a") ("BLOCKED" . "") ("FILE" . "/home/ignazio/Documents/wiki/20220102141430-uniswap.org") ("PRIORITY" . "B")) nil nil nil nil)) 199 209 (node #s(org-roam-node "/home/ignazio/Documents/wiki/20220102141430-uniswap.org" "uniswap" nil (25041 42396 809117 170000) (25041 42396 789117 265000) "0d71e13b-f6b0-440b-aabb-f1ea4414371a" 0 1 nil nil nil nil "uniswap" (("CATEGORY" . "20220102141430-uniswap") ("ID" . "0d71e13b-f6b0-440b-aabb-f1ea4414371a") ("BLOCKED" . "") ("FILE" . "/home/ignazio/Documents/wiki/20220102141430-uniswap.org") ("PRIORITY" . "B")) nil nil nil nil) face org-tag)) "aave" "curve finance" "price impact" #("uniswap                                                                                                                                                                                                          " 0 199 (node #s(org-roam-node "/home/ignazio/Documents/wiki/20220102141430-uniswap.org" "uniswap" nil (25041 42396 809117 170000) (25041 42396 789117 265000) "0d71e13b-f6b0-440b-aabb-f1ea4414371a" 0 1 nil nil nil nil "uniswap" (("CATEGORY" . "20220102141430-uniswap") ("ID" . "0d71e13b-f6b0-440b-aabb-f1ea4414371a") ("BLOCKED" . "") ("FILE" . "/home/ignazio/Documents/wiki/20220102141430-uniswap.org") ("PRIORITY" . "B")) nil nil nil nil)) 199 209 (node #s(org-roam-node "/home/ignazio/Documents/wiki/20220102141430-uniswap.org" "uniswap" nil (25041 42396 809117 170000) (25041 42396 789117 265000) "0d71e13b-f6b0-440b-aabb-f1ea4414371a" 0 1 nil nil nil nil "uniswap" (("CATEGORY" . "20220102141430-uniswap") ("ID" . "0d71e13b-f6b0-440b-aabb-f1ea4414371a") ("BLOCKED" . "") ("FILE" . "/home/ignazio/Documents/wiki/20220102141430-uniswap.org") ("PRIORITY" . "B")) nil nil nil nil) face org-tag)) "etherum virtual machine" "smart contract" #("defi                                                                                                                                                                                                             " 0 199 (node #s(org-roam-node "/home/ignazio/Documents/wiki/20211226123029-defi.org" "defi" nil (25032 21126 942215 928000) (25032 21126 930215 978000) "6cb8eb42-b761-4060-b9cc-577c118f5702" 0 1 nil nil nil nil "defi" (("CATEGORY" . "20211226123029-defi") ("ID" . "6cb8eb42-b761-4060-b9cc-577c118f5702") ("BLOCKED" . "") ("FILE" . "/home/ignazio/Documents/wiki/20211226123029-defi.org") ("PRIORITY" . "B")) nil nil nil nil)) 199 209 (node #s(org-roam-node "/home/ignazio/Documents/wiki/20211226123029-defi.org" "defi" nil (25032 21126 942215 928000) (25032 21126 930215 978000) "6cb8eb42-b761-4060-b9cc-577c118f5702" 0 1 nil nil nil nil "defi" (("CATEGORY" . "20211226123029-defi") ("ID" . "6cb8eb42-b761-4060-b9cc-577c118f5702") ("BLOCKED" . "") ("FILE" . "/home/ignazio/Documents/wiki/20211226123029-defi.org") ("PRIORITY" . "B")) nil nil nil nil) face org-tag)) #("Defi                                                                                                                                                                                                             " 0 199 (node #s(org-roam-node "/home/ignazio/Documents/wiki/20220102141149-defi.org" "Defi" nil (25041 43159 754734 336000) (25041 43159 734734 502000) "cffda3bd-d476-4552-87d2-0cc646cabfb6" 0 1 nil nil nil nil "Defi" (("CATEGORY" . "20220102141149-defi") ("ID" . "cffda3bd-d476-4552-87d2-0cc646cabfb6") ("BLOCKED" . "") ("FILE" . "/home/ignazio/Documents/wiki/20220102141149-defi.org") ("PRIORITY" . "B")) nil nil nil nil)) 199 209 (node #s(org-roam-node "/home/ignazio/Documents/wiki/20220102141149-defi.org" "Defi" nil (25041 43159 754734 336000) (25041 43159 734734 502000) "cffda3bd-d476-4552-87d2-0cc646cabfb6" 0 1 nil nil nil nil "Defi" (("CATEGORY" . "20220102141149-defi") ("ID" . "cffda3bd-d476-4552-87d2-0cc646cabfb6") ("BLOCKED" . "") ("FILE" . "/home/ignazio/Documents/wiki/20220102141149-defi.org") ("PRIORITY" . "B")) nil nil nil nil) face org-tag)) #("uniswap                                                                                                                                                                                                          " 0 199 (node #s(org-roam-node "/home/ignazio/Documents/wiki/20220102141430-uniswap.org" "uniswap" nil (25041 42396 809117 170000) (25041 42396 789117 265000) "0d71e13b-f6b0-440b-aabb-f1ea4414371a" 0 1 nil nil nil nil "uniswap" (("CATEGORY" . "20220102141430-uniswap") ("ID" . "0d71e13b-f6b0-440b-aabb-f1ea4414371a") ("BLOCKED" . "") ("FILE" . "/home/ignazio/Documents/wiki/20220102141430-uniswap.org") ("PRIORITY" . "B")) nil nil nil nil)) 199 209 (node #s(org-roam-node "/home/ignazio/Documents/wiki/20220102141430-uniswap.org" "uniswap" nil (25041 42396 809117 170000) (25041 42396 789117 265000) "0d71e13b-f6b0-440b-aabb-f1ea4414371a" 0 1 nil nil nil nil "uniswap" (("CATEGORY" . "20220102141430-uniswap") ("ID" . "0d71e13b-f6b0-440b-aabb-f1ea4414371a") ("BLOCKED" . "") ("FILE" . "/home/ignazio/Documents/wiki/20220102141430-uniswap.org") ("PRIORITY" . "B")) nil nil nil nil) face org-tag)) "liqudity and reserve parallelism" "critique of market socialism" "market socialism" "Mises argument against socialists" "economic calculation" "central economic planning" "means-end framework" "opportunity cost" "methodological individualism" #("marginal theory of value                                                                                                                                                                                         " 0 199 (node #s(org-roam-node "/home/ignazio/Documents/wiki/20220102160134-marginal_theory_of_value.org" "marginal theory of value" nil (25041 49547 314487 666000) (25041 49547 290488 900000) "c53f8bf6-2c15-4899-9990-e3e78a7380ca" 0 1 nil nil nil nil "marginal theory of value" (("CATEGORY" . "20220102160134-marginal_theory_of_value") ("ID" . "c53f8bf6-2c15-4899-9990-e3e78a7380ca") ("BLOCKED" . "") ("FILE" . "/home/ignazio/Documents/wiki/20220102160134-marginal_theory_of_value.org") ("PRIORITY" . "B")) nil nil nil nil)) 199 209 (face org-tag node #s(org-roam-node "/home/ignazio/Documents/wiki/20220102160134-marginal_theory_of_value.org" "marginal theory of value" nil (25041 49547 314487 666000) (25041 49547 290488 900000) "c53f8bf6-2c15-4899-9990-e3e78a7380ca" 0 1 nil nil nil nil "marginal theory of value" (("CATEGORY" . "20220102160134-marginal_theory_of_value") ("ID" . "c53f8bf6-2c15-4899-9990-e3e78a7380ca") ("BLOCKED" . "") ("FILE" . "/home/ignazio/Documents/wiki/20220102160134-marginal_theory_of_value.org") ("PRIORITY" . "B")) nil nil nil nil))) "austrian economics" #("labour theory of value                                                                                                                                                                                           " 0 199 (node #s(org-roam-node "/home/ignazio/Documents/wiki/20220102155531-labour_theory_of_value.org" "labour theory of value" nil (25041 48518 765813 25000) (25041 48518 745813 110000) "1e40fef0-57f3-4a6d-bb8b-976c324203cd" 0 1 nil nil nil nil "labour theory of value" (("CATEGORY" . "20220102155531-labour_theory_of_value") ("ID" . "1e40fef0-57f3-4a6d-bb8b-976c324203cd") ("BLOCKED" . "") ("FILE" . "/home/ignazio/Documents/wiki/20220102155531-labour_theory_of_value.org") ("PRIORITY" . "B")) nil nil nil nil)) 199 209 (face org-tag node #s(org-roam-node "/home/ignazio/Documents/wiki/20220102155531-labour_theory_of_value.org" "labour theory of value" nil (25041 48518 765813 25000) (25041 48518 745813 110000) "1e40fef0-57f3-4a6d-bb8b-976c324203cd" 0 1 nil nil nil nil "labour theory of value" (("CATEGORY" . "20220102155531-labour_theory_of_value") ("ID" . "1e40fef0-57f3-4a6d-bb8b-976c324203cd") ("BLOCKED" . "") ("FILE" . "/home/ignazio/Documents/wiki/20220102155531-labour_theory_of_value.org") ("PRIORITY" . "B")) nil nil nil nil))) "marginal theory of value" "labour theory of value" "theory of value" #("olympusDAO                                                                                                                                                                                                       " 0 199 (node #s(org-roam-node "/home/ignazio/Documents/wiki/20211226122933-olympusdao.org" "olympusDAO" nil (25040 12713 612294 295000) (25040 12713 604294 275000) "30607b66-ca55-48c3-ab0d-f0a807275f6d" 0 1 nil nil nil nil "olympusDAO" (("CATEGORY" . "20211226122933-olympusdao") ("ID" . "30607b66-ca55-48c3-ab0d-f0a807275f6d") ("BLOCKED" . "") ("FILE" . "/home/ignazio/Documents/wiki/20211226122933-olympusdao.org") ("PRIORITY" . "B")) nil nil nil nil)) 199 209 (face org-tag node #s(org-roam-node "/home/ignazio/Documents/wiki/20211226122933-olympusdao.org" "olympusDAO" nil (25040 12713 612294 295000) (25040 12713 604294 275000) "30607b66-ca55-48c3-ab0d-f0a807275f6d" 0 1 nil nil nil nil "olympusDAO" (("CATEGORY" . "20211226122933-olympusdao") ("ID" . "30607b66-ca55-48c3-ab0d-f0a807275f6d") ("BLOCKED" . "") ("FILE" . "/home/ignazio/Documents/wiki/20211226122933-olympusdao.org") ("PRIORITY" . "B")) nil nil nil nil))) "liquidity problem" "constant product market maker" "uniswap" "Defi" "premium over rfv" "risk free value" "olympusDAO treasury" "bond control variable" "olympusDAO bonding" "reward rate" "olympusDAO staking" "internal coordination theory" #("rational                                                                                                                                                                                                         " 0 199 (node #s(org-roam-node "/home/ignazio/Documents/wiki/20220101105015-rational.org" "rational" nil (25040 9318 33507 678000) (25040 9318 17509 337000) "69d75332-8c9f-40f8-9565-14fdf5df153d" 0 1 nil nil nil nil "rational" (("CATEGORY" . "20220101105015-rational") ("ID" . "69d75332-8c9f-40f8-9565-14fdf5df153d") ("BLOCKED" . "") ("FILE" . "/home/ignazio/Documents/wiki/20220101105015-rational.org") ("PRIORITY" . "B")) nil nil nil nil)) 199 209 (face org-tag node #s(org-roam-node "/home/ignazio/Documents/wiki/20220101105015-rational.org" "rational" nil (25040 9318 33507 678000) (25040 9318 17509 337000) "69d75332-8c9f-40f8-9565-14fdf5df153d" 0 1 nil nil nil nil "rational" (("CATEGORY" . "20220101105015-rational") ("ID" . "69d75332-8c9f-40f8-9565-14fdf5df153d") ("BLOCKED" . "") ("FILE" . "/home/ignazio/Documents/wiki/20220101105015-rational.org") ("PRIORITY" . "B")) nil nil nil nil))) "olympusDAO model" #("tft                                                                                                                                                                                                              " 0 199 (node #s(org-roam-node "/home/ignazio/Documents/wiki/20220101114604-tft.org" "tft" nil (25040 12528 560181 290000) (25040 12528 544181 316000) "46094152-a461-48ce-a976-8e932458b6f2" 0 1 nil nil nil nil "tft" (("CATEGORY" . "20220101114604-tft") ("ID" . "46094152-a461-48ce-a976-8e932458b6f2") ("BLOCKED" . "") ("FILE" . "/home/ignazio/Documents/wiki/20220101114604-tft.org") ("PRIORITY" . "B")) nil nil nil nil)) 199 209 (face org-tag node #s(org-roam-node "/home/ignazio/Documents/wiki/20220101114604-tft.org" "tft" nil (25040 12528 560181 290000) (25040 12528 544181 316000) "46094152-a461-48ce-a976-8e932458b6f2" 0 1 nil nil nil nil "tft" (("CATEGORY" . "20220101114604-tft") ("ID" . "46094152-a461-48ce-a976-8e932458b6f2") ("BLOCKED" . "") ("FILE" . "/home/ignazio/Documents/wiki/20220101114604-tft.org") ("PRIORITY" . "B")) nil nil nil nil))) "tft" #("prisoner dilemma                                                                                                                                                                                                 " 0 199 (node #s(org-roam-node "/home/ignazio/Documents/wiki/20220101104904-prisoner_dilemma.org" "prisoner dilemma" nil (25040 10525 985630 697000) (25040 10525 969630 41000) "05525bce-146f-42ea-9984-65cff20d5968" 0 1 nil nil nil nil "prisoner dilemma" (("CATEGORY" . "20220101104904-prisoner_dilemma") ("ID" . "05525bce-146f-42ea-9984-65cff20d5968") ("BLOCKED" . "") ("FILE" . "/home/ignazio/Documents/wiki/20220101104904-prisoner_dilemma.org") ("PRIORITY" . "B")) nil nil nil nil)) 199 209 (face org-tag node #s(org-roam-node "/home/ignazio/Documents/wiki/20220101104904-prisoner_dilemma.org" "prisoner dilemma" nil (25040 10525 985630 697000) (25040 10525 969630 41000) "05525bce-146f-42ea-9984-65cff20d5968" 0 1 nil nil nil nil "prisoner dilemma" (("CATEGORY" . "20220101104904-prisoner_dilemma") ("ID" . "05525bce-146f-42ea-9984-65cff20d5968") ("BLOCKED" . "") ("FILE" . "/home/ignazio/Documents/wiki/20220101104904-prisoner_dilemma.org") ("PRIORITY" . "B")) nil nil nil nil))) "iterated prisoner dilemma" "nash equilibrium" "rational" "prisoner dilemma" #("olympusDAO                                                                                                                                                                                                       " 0 199 (node #s(org-roam-node "/home/ignazio/Documents/wiki/20211226122933-olympusdao.org" "olympusDAO" nil (25032 21028 118669 210000) (25032 21028 110669 251000) "30607b66-ca55-48c3-ab0d-f0a807275f6d" 0 1 nil nil nil nil "olympusDAO" (("CATEGORY" . "20211226122933-olympusdao") ("ID" . "30607b66-ca55-48c3-ab0d-f0a807275f6d") ("BLOCKED" . "") ("FILE" . "/home/ignazio/Documents/wiki/20211226122933-olympusdao.org") ("PRIORITY" . "B")) nil nil nil nil)) 199 209 (node #s(org-roam-node "/home/ignazio/Documents/wiki/20211226122933-olympusdao.org" "olympusDAO" nil (25032 21028 118669 210000) (25032 21028 110669 251000) "30607b66-ca55-48c3-ab0d-f0a807275f6d" 0 1 nil nil nil nil "olympusDAO" (("CATEGORY" . "20211226122933-olympusdao") ("ID" . "30607b66-ca55-48c3-ab0d-f0a807275f6d") ("BLOCKED" . "") ("FILE" . "/home/ignazio/Documents/wiki/20211226122933-olympusdao.org") ("PRIORITY" . "B")) nil nil nil nil) face org-tag)) "defi" "olympusDAO"))
(setq flycheck-read-checker-history '("rust-cargo"))
(setq magit-revision-history '("giza-olympia_fix_NFTInitStateAndIssuance" "fix_nft_bak" "giza-olympia-ignazio" "giza-olympia_fix_NFTInitStateAndIssuance" "giza-olympia-ignazio" "giza-olympia_fix_NFTInitStateAndIssuance" "giza-olympia-ignazio" "giza-olympia_fix_NFTInitStateAndIssuance" "giza-olympia-ignazio" "giza-olympia_fix_NFTInitStateAndIssuance" "giza-olympia-ignazio" "giza_feature_NewContentFeaturesAndNFTNoUnusedCode" "giza_feature_NewContentFeaturesAndNFT" "giza" "giza-olympia-ignazio" "giza" "giza_staging" "giza_feature_NewContentFeatures" "giza-olympia-ignazio" "olympia" "giza-olympia-ignazio" "giza" "origin/giza-olympia-ignazio" "giza-olympia-ignazio" "giza-olympia-attempt1" "giza" "giza-olympia-ignazio" "giza" "giza-olympia-ignazio" "olympia" "giza-olympia-ignazio" "giza_feature_NewContentFeaturesAndNFT" "giza-olympia-ignazio" "giza_feature_NewContentFeaturesAndNFT" "giza-olympia-ignazio" "giza_feature_NewContentFeaturesAndNFT" "giza-olympia-ignazio" "olympia" "giza-olympia-ignazio" "olympia" "giza-olympia-ignazio" "olympia" "giza-olympia-ignazio" "olympia" "giza-olympia-ignazio" "olympia" "giza-olympia-ignazio" "olympia" "giza-olympia-ignazio" "olympia" "giza-olympia-ignazio" "giza_feature_NewContentFeaturesAndNFT" "giza-olympia-ignazio" "olympia" "giza-olympia-ignazio" "olympia" "giza-olympia-ignazio" "giza_feature_NewContentFeaturesAndNFT" "giza-olympia-ignazio" "giza_feature_NewContentFeaturesAndNFT" "giza-olympia-ignazio" "olympia" "giza_feature_NewContentFeaturesAndNFT" "giza-olympia-ignazio" "giza_feature_NewContentFeaturesAndNFT" "giza-olympia-ignazio" "giza_feature_NewContentFeaturesAndNFT" "giza-olympia-ignazio" "giza_feature_NewContentFeaturesAndNFT" "giza-olympia-ignazio" "giza_feature_NewContentFeaturesAndNFT" "giza-olympia-ignazio" "olympia" "giza-olympia-ignazio" "olympia" "giza-olympia-ignazio" "olympia" "giza-olympia-ignazio" "olympia" "giza-olympia-ignazio" "olympia" "giza-olympia-ignazio" "olympia" "giza-olympia-ignazio" "olympia" "giza-olympia-ignazio" "olympia" "giza-olympia-ignazio" "olympia" "giza-olympia-ignazio" "olympia" "giza-olympia-ignazio" "olympia" "giza-olympia-ignazio" "olympia" "giza-olympia-ignazio" "olympia" "giza-olympia-ignazio" "olympia" "giza-olympia-ignazio"))
(setq org-read-date-history '("12:00    " "   " "8:00    " "17:00    " "   " "17:00    " "12:00    " "16:30    " "15:30    " "   " "15:30    " "26 15:00    " "   " "17:00    " "   " "12:00    " "14:30    " "   " "26 17:30    " "16:30    " "   " "16:30    " "14:30    " "12:00    " "25 16:30    " "26 16:30    " "25 16:30    " "25 12:00    " "11:30    " "16:30    " "12:00    " "   " "14:00    " "10:30    " "14:00    " "23 15:00 ++1d    " "   " "11:30    " "13:00    " "12:00    " "11:00    " "14:00    " "15:00    " "14:00    " "13:00    " "14:00    " "17 12:00    " "15:30    " "   " "14:00    " "17 11:30    " "05:00    " "   " "10    " "   " "17 6:00    " "5:00    " "16 8:30    " "   " "16:30    " "17:30    " "15:30    " "14    " "14:00 14    " "16:30 15    " "06:00    " "08:00    " "   " "15 16:00    " "16 16:00    " "14:30    " "13 14:00    " "14 18:30    " "08:00    " "15:00 14    " "   " "6:00    " "21:30    " "11:30 13    " "6:00 13    " "16 7:25    " " 21:15    " "12 20:30    " "16:30    " "12 17:30    " "12 6:00    " "8:00    " "11:15 12    " "   " "13:00    " "   " "17    " "8:30    " "12:15    " "13 12:00    " "12 16:30    " "11:15    " "10:15    " "9:30    " "08:30    "))
(setq query-replace-history '("            None,
            b\"metablob\".to_vec(),
            None" #("            NFTIssuanceParameters::<Test>::default()," 0 12 (face whitespace-space) 12 33 (face font-lock-type-face) 35 36 (syntax-table (1)) 36 40 (face font-lock-type-face) 40 41 (syntax-table (1)) 51 52 (rear-nonsticky t) 52 53 (rear-nonsticky t)) "DEFAULT_NFT_PRICE" "price" "ACCOUNT_ID" "ORIGIN" "DEFAULT_MEMBER" "FIRST_MEMBER" "DEFAULT_NFT_PRICE" "price" "ACCOUNT_ID" "ORIGIN" "DEFAULT_MEMBER" "FIRST_MEMBER" "            NFTIssuanceParameters::<Test>::default()," #("            None,
            b\"metablob\".to_vec(),
            None" 0 12 (face whitespace-space) 12 16 (face font-lock-type-face) 18 30 (face whitespace-space) 31 41 (face font-lock-string-face) 52 64 (face whitespace-space) 64 68 (face font-lock-type-face)) "NFTIssuanceParameters" #("NFTIssuance" 0 10 (face font-lock-type-face) 10 11 (rear-nonsticky t face font-lock-type-face)) "InitTransactionalStatus" #("AutomatedTransactionalStatusParameters" 0 37 (face font-lock-type-face) 37 38 (face font-lock-type-face rear-nonsticky t)) #("AutomatedTransactionalStatusParameters" 0 37 (face font-lock-type-face) 37 38 (rear-nonsticky t face font-lock-type-face)) "InitTransactionalStatus" #("AutomatedTransactionalStatusSetupParameters" 0 42 (face font-lock-type-face) 42 43 (rear-nonsticky t face font-lock-type-face)) "DISTRIBUTION" "STORAGE" "Distribution" "Storage" "T::DistributionWorkingGroup::ensure_worker_exists" #("T::ensure_distribution_worker_exists" 0 1 (face font-lock-type-face)) "T::Storage::WorkingGroup::ensure_worker_exists" #("T::ensure_storage_worker_exists" 0 1 (face font-lock-type-face)) "T::StorageWorkingGroup::ensure_worker_origin" #("T::ensure_storage_worker_origin" 0 1 (face font-lock-type-face)) "T::DistributionWorkingGroup::ensure_worker_origin" #("T::ensure_distribution_worker_origin" 0 1 (face font-lock-type-face)) "T::DistributionWorkingGroup::ensure_leader_origin" #("T::ensure_distribution_working_group_leader_origin" 0 1 (face font-lock-type-face)) "T::StorageWorkingGroup::ensure_leader_origin" #("T::ensure_storage_working_group_leader_origin" 0 1 (face font-lock-type-face)) "T::DistributionWorkingGroup::ensure_leader_origin" #("T::ensure_distribution_working_group_leader_origin" 0 1 (face font-lock-type-face)) "T::StorageWorkingGroup::ensure_worker_origin" #("T::ensure_storage_working_group_leader_origin" 0 1 (face font-lock-type-face)) "T::WorkingGroup::ensure_worker_origin" #("T::ensure_storage_worker_origin" 0 1 (face font-lock-type-face)) "T::WorkingGroup::ensureleader_origin" #("T::ensure_storage_working_group_leader_origin" 0 1 (face font-lock-type-face)) "Gamma" "Beta" "Beta" "Alpha" "Distribution" "Gateway" "Gamma" "Alpha" "Gamma" "Alpha" "Beta" "Alpha" "run_create_set_group_leader_reward_proposal_execution_succeeds" "run_create_set_working_group_mint_capacity_proposal_execution_succeeds" "Gamma" "Alpha" "Beta" "Alpha" "Distribution" "Gateway" "Gamma" "Alpha" "Beta" "Alpha" "Gamma" "Alpha" "Beta" "Alpha" "Gamma" "Alpha" "Beta" "Alpha" "ContentWorkingGroup" #("ContentDirectoryWorkingGroup" 0 27 (face font-lock-type-face) 27 28 (face font-lock-type-face rear-nonsticky t)) "Test" "Runtime" "StorageWorkingGroupInstance" "MembershipWorkingGroupInstance" "ContentGroup" "ContentDirectoryGroup" "ContentWorkingGroup" "ContentDirectoryWorkingGroup" "Gamma" "Alpha" "Beta" "Alpha" "Gamma" "Alpha" "Beta" "Alpha" "Aplha" "Beta" "Alpha"))
(setq buffer-name-history '(".gitignore" "*eshell*" "Firefox-esr" "*eshell*" "todo.org" "work.org" ".authinfo.gpg" ".backups" ".bash_history" ".bash_logout" ".bash_profile" ".bashrc" "user" ".nano-savehist" ".newsrc.eld" ".notes" ".Xmodmap" ".xinitrc" "todo.org" "lib.rs" "fixtures.rs" "migration.rs" "mock.rs" "github_token" "primitives.rs" "*rustic-compilation*" "mod.rs" "lib.rs<runtime>" "lib.rs" "Firefox-esr" "lib.rs" "Firefox-esr" "types.rs<src>" "lib.rs" "zoom" "types.rs<src>" "Firefox-esr" "lib.rs" "Firefox-esr" "magit: joystream" "*eshell*" "lib.rs" "Firefox-esr" "*eshell*" "issue_nft.rs" "github_token" "issue_nft.rs" "*cargo-test*" "lib.rs" "types.rs" "lib.rs" "mod.rs" "mod.rs<content>" "lib.rs" "types.rs" "mod.rs" "Firefox-esr" "lib.rs" "types.rs" "lib.rs" "Firefox-esr" "types.rs" "mod.rs" "types.rs" "mod.rs" "types.rs" "lib.rs" "mod.rs" "types.rs" "lib.rs" "*rustic-compilation*" "Firefox-esr" "types.rs" "Firefox-esr" "types.rs" "*rustic-compilation*" "types.rs" "zoom" "Firefox-esr" "zoom" "lib.rs" "types.rs" "start_nft_auction.rs" "lib.rs" "issue_nft.rs" "mod.rs" "start_nft_auction.rs" "mod.rs" "lib.rs" "mod.rs" "merging_plan.org" "lib.rs" "mod.rs" "lib.rs" "mod.rs" "types.rs" "Emacs" "*Customize Group: Org Faces*" "*Customize Group: Calendar*" "*Customize Group: Org Agenda*"))
(setq file-name-history '("~/.dotfiles/.gitignore" "~/" "~/Documents/org/work.org" "~/Documents/" "~/Documents/org/" "~/developer/github_token" "~/developer/joystream/node/src/chain_spec/mod.rs" "~/developer/joystream/runtime/src/primitives.rs" "~/developer/joystream/runtime-modules/content/src/types.rs" "~/developer/github_token" "~/.emacs.d/" "~/.emacs" "~/developer/joystream/runtime-modules/content/src/nft/mod.rs" "~/developer/joystream/runtime-modules/content/src/tests/nft/start_nft_auction.rs" "~/developer/joystream/runtime-modules/content/src/nft/types.rs" "~/developer/joystream/runtime-modules/content/src/nft/mod.rs" "~/.emacs" "~/.emacs.d/straight/build/almost-mono-themes/almost-mono-themes.el" "~/developer/projects/asana/asana.gpg" "~/developer/projects/asana/main.py" "~/.emacs.d/site-lisp/ts-org-interaction.el" "~/.emacs.d/site-lisp/asana.gpg" "~/.authinfo.gpg" "~/.emacs" "~/developer/github_token" "~/developer/joystream/runtime-modules/content/src/tests/nft.rs" "~/developer/joystream/runtime-modules/content/src/tests/nft/" "~/developer/github_token" "~/developer/joystream/runtime-modules/content/src/tests/nft/" "~/developer/joystream/runtime-modules/content/src/tests/nft/buy_nft.rs" "~/developer/github_token" "~/developer/joystream/runtime-modules/storage/src/tests/mocks.rs" "~/developer/joystream/runtime-modules/membership/src/tests/mock.rs" "~/developer/joystream/runtime-modules/storage/Cargo.toml" "~/developer/joystream/scripts/run-dev-chain.sh" "~/developer/joystream/scripts/cargo-build.sh" "~/developer/joystream/package.json" "~/developer/joystream/yarn.lock" "~/developer/joystream/runtime-modules/storage/src/lib.rs" "~/developer/github_token" "~/developer/joystream/runtime/src/constants.rs" "~/developer/joystream/runtime/src/primitives.rs" "~/developer/joystream/runtime/src/tests/proposals_integration/mod.rs" "~/developer/joystream/runtime-modules/staking-handler/src/lib.rs" "~/developer/joystream/runtime/src/lib.rs" "~/developer/joystream/runtime/src/tests/mod.rs" "~/developer/joystream/runtime-modules/common/src/working_group.rs" "~/developer/joystream/runtime/src/tests/proposals_integration/mod.rs" "~/developer/joystream/runtime-modules/common/src/working_group.rs" "~/developer/joystream/runtime/src/tests/proposals_integration/mod.rs" "~/developer/joystream/runtime/src/tests/proposals_integration/working_group_proposals.rs" "~/developer/joystream/runtime/src/lib.rs" "~/developer/joystream/runtime/src/integration/proposals/proposal_encoder.rs" "~/developer/joystream/runtime/src/integration/proposals/mod.rs" "~/developer/joystream/runtime/src/integration/proposals/council_manager.rs" "~/developer/joystream/runtime-modules/utility/src/tests/mocks.rs" "~/developer/joystream/runtime-modules/membership/src/lib.rs" "~/developer/joystream/runtime-modules/membership/Cargo.toml" "~/developer/joystream/runtime-modules/content/Cargo.toml" "~/developer/joystream/runtime-modules/membership/src/tests/mock.rs" "~/developer/joystream/runtime-modules/content/src/tests/mock.rs" "~/developer/joystream/runtime-modules/content/src/permissions/mod.rs" "~/developer/joystream/runtime-modules/storage/src/lib.rs" "~/developer/joystream/runtime-modules/membership/src/lib.rs" "~/developer/joystream/runtime-modules/storage/src/tests/fixtures.rs" "~/developer/joystream/runtime-modules/membership/src/tests/fixtures.rs" "~/developer/joystream/runtime-modules/membership/src/tests/" "~/developer/joystream/runtime-modules/storage/src/tests/mocks.rs" "~/developer/experiments/gabri.py" "~/developer/experiments/" "~/developer/joystream/runtime-modules/storage/src/tests/mocks.rs" "~/developer/joystream/utils/chain-spec-builder/src/main.rs" "~/developer/joystream/node/Cargo.toml" "~/developer/joystream/runtime/src/constants.rs" "~/developer/joystream/runtime/src/proposals_configuration/mod.rs" "~/developer/joystream/runtime/src/proposals_configuration/defaults.rs" "~/developer/joystream/runtime/src/proposals_configuration/sample_proposal_parameters.json" "~/developer/joystream/runtime/src/integration/proposals/proposal_encoder.rs" "~/developer/joystream/node/src/chain_spec/mod.rs" "~/developer/joystream/node/src/chain_spec/forum_config.rs" "~/developer/joystream/runtime/build.rs" "~/developer/joystream/runtime-modules/content/src/tests/mock.rs" "~/developer/joystream/runtime-modules/storage/src/tests/mocks.rs" "~/developer/joystream/runtime-modules/common/src/origin.rs" "~/developer/joystream/runtime/src/integration/proposals/membership_origin_validator.rs" "~/developer/joystream/runtime/src/integration/proposals/proposal_encoder.rs" "~/developer/joystream/runtime/src/integration/proposals/membership_origin_validator.rs" "~/developer/joystream/runtime/src/integration/transactions.rs" "~/developer/joystream/runtime-modules/working-group/src/checks.rs" "~/developer/joystream/runtime/Cargo.toml" "~/developer/joystream/runtime-modules/common/src/working_group.rs" "~/developer/joystream/runtime-modules/working-group/src/checks.rs" "~/developer/joystream/runtime-modules/content/src/types.rs" "~/developer/joystream/runtime/src/runtime_api.rs" "~/developer/joystream/runtime/src/integration/proposals/proposal_encoder.rs" "~/developer/joystream/runtime-modules/working-group/src/lib.rs" "~/developer/joystream/runtime/src/integration/mod.rs" "~/developer/joystream/runtime/src/integration/content_directory.rs" "~/developer/joystream/runtime/src/lib.rs" "~/developer/joystream/runtime/src/primitives.rs"))
(setq minibuffer-history '(".emacs" "ignazio-bovo" "origin" "462" "runtime/src/lib.rs" "runtime-modules/content/src/tests/fixtures.rs" "runtime-modules/content/src/lib.rs" "runtime-modules/content/src/nft/types.rs" "~/developer/joystream/" "runtime-modules/content/src/lib.rs" "giza-olympia_fix_BundledVideoCreationAndNFTIssuance" "runtime-modules/content/src/lib.rs" "~/developer/joystream/" "runtime-modules/content/src/lib.rs" "~/developer/joystream/" "ignazio-bovo" "runtime-modules/content/src/nft/types.rs" "ignazio-bovo" "runtime-modules/content/src/tests/nft/start_nft_auction.rs" "runtime-modules/content/src/lib.rs" "~/developer/joystream/" "runtime-modules/content/src/nft/types.rs" "runtime-modules/content/src/tests/nft/issue_nft.rs" "runtime-modules/content/src/nft/types.rs" "merging_plan.org" "~/Documents/org/olympia/" "runtime-modules/content/src/lib.rs" "~/developer/joystream/" "sudo poweroff" "almost-mono-black" "org-faces" "almost-mono-black" "org-faces" "org-agenda" "calendar" "almost-mono-black" "eww" "src/main.rs" "~/developer/experiments/" "almost-mono-black" "magit" "almost-mono-black" "magit" "custom-magic-faces" "almost-mono-black" "almost-mono-themes.el" "~/.emacs.d/straight/repos/almost-mono-themes/" "almost-mono-black" "vc" "almost-mono-themes.el" "~/.emacs.d/straight/repos/almost-mono-themes/" "ignazio-bovo" "origin" "fix_nft_bak" "ignazio-bovo" "runtime-modules/content/src/tests/nft/buy_nft.rs" "runtime-modules/content/src/tests/nft/start_nft_auction.rs" "runtime-modules/content/src/tests/mod.rs" "runtime-modules/content/src/tests/nft/accept_incoming_offer.rs" "runtime-modules/content/src/nft/types.rs" "runtime-modules/content/src/tests/nft/start_nft_auction.rs" "runtime-modules/content/src/tests/nft/sling_nft_back.rs" "runtime-modules/content/src/tests/nft/sell_nft.rs" "runtime-modules/content/src/tests/nft/pick_open_auction_winner.rs" "runtime-modules/content/src/tests/nft/offer_nft.rs" "runtime-modules/content/src/tests/nft/make_bid.rs" "runtime-modules/content/src/lib.rs" "runtime-modules/content/src/tests/nft/issue_nft.rs" "runtime-modules/content/src/tests/nft/claim_won_english_auction.rs" "runtime-modules/content/src/tests/nft/cancel_open_auction_bid.rs" "runtime-modules/content/src/tests/nft/cancel_offer.rs" "runtime-modules/content/src/tests/mod.rs" "runtime-modules/content/src/tests/nft/cancel_nft_auction.rs" "runtime-modules/content/src/tests/mod.rs" "runtime-modules/content/src/tests/nft/cancel_buy_now.rs" "runtime-modules/content/src/tests/nft/buy_nft.rs" "ignazio-bovo" "runtime-modules/storage/src/tests/mocks.rs" "runtime-modules/content/src/tests/nft/buy_nft.rs" "runtime-modules/storage/src/tests/mocks.rs" "runtime-modules/content/src/nft/types.rs" "runtime-modules/content/src/lib.rs" "runtime-modules/content/src/tests/mock.rs" "runtime-modules/content/src/types.rs" "runtime-modules/content/src/nft/types.rs" "runtime-modules/content/src/lib.rs" "giza-olympia_fix_NFTInitStateAndIssuance" "runtime-modules/storage/src/lib.rs" "ignazio-bovo" "runtime/src/integration/content_directory.rs" "runtime-modules/working-group/src/lib.rs" "runtime-modules/content/src/permissions/mod.rs" "runtime-modules/content/src/lib.rs" "runtime-modules/working-group/src/lib.rs" "runtime-modules/referendum/src/lib.rs" "runtime/src/tests/proposals_integration/working_group_proposals.rs" "runtime/src/lib.rs" "runtime-modules/content/src/lib.rs" "runtime-modules/membership/src/tests/mock.rs" "runtime-modules/common/src/working_group.rs"))
(setq read-char-history '("yes"))
(setq ido-buffer-history '("Firefox-esr" "todo.org" "traveller_checklist.org" "work.org" "almost-mono-themes.el" "*rust-analyzer::stderr*" "*lsp-log*" "future_authoring.org" "*scratch*" "Documents" "org" "*scratch*" "*straight-process*" "*Messages*" "*scratch*" "*Customize Apropos*" "*Customize Group: Emacs*" "todo.org" "*GNU Emacs*" "*dashboard*" "header-line.el [No match]" "archive-contents" ".ICEauthority"))
(setq ido-file-history '("traveller_checklist.org" "work.org" "future_authoring.org" ".emacs" "todo.org" ".emacs" "header-line.el [No match]" "." "almost-mono-themes.el" "archive-contents" "." ".ICEauthority"))
(setq extended-command-history '("eshell" "lsp-disconnect" "lsp-mode" "lsp-disconnect" "flycheck-mode" "eshell" "flycheck-mode" "lsp-disconnect" "flycheck-mode" "lsp-disconnect" "flycheck-mode" "lsp-disconnect" "flycheck-mode" "lsp-disconnect" "flycheck-mode" "lsp-disconnect" "straight-remove-unused-repos" "lsp-disconnect" "comment-region" "gnus" "eshell-command" "load-theme" "eval-buffer" "load-theme" "eval-buffer" "load-theme" "eval-buffer" "load-theme" "eval-buffer" "customize-group" "load-theme" "eval-buffer" "customize-group" "customize-face" "customize-group" "load-theme" "eval-buffer" "load-theme" "eval-buffer" "load-theme" "eval-buffer" "load-theme" "eval-buffer" "load-theme" "eval-buffer" "load-theme" "eval-buffer" "load-theme" "eval-buffer" "load-theme" "eval-buffer" "load-theme" "eval-buffer" "eww" "load-theme" "eval-buffer" "load-theme" "eval-buffer" "customize-group" "customize-face" "load-theme" "eval-buffer" "customize-face" "load-theme" "eval-buffer" "customize-face" "load-theme" "eval-buffer" "load-theme" "eval-buffer" "load-theme" "eval-buffer" "load-theme" "eval-buffer" "load-theme" "eval-buffer" "load-theme" "eval-buffer" "load-theme" "eval-buffer" "load-theme" "eval-buffer" "load-theme" "eval-buffer" "load-theme" "eval-buffer" "load-theme" "eval-buffer" "load-theme" "eval-buffer" "customize-group" "load-theme" "eval-buffer" "load-theme" "eval-buffer" "load-theme" "eval-buffer" "load-theme" "eval-buffer" "load-theme"))
(setq consult--line-history '("dot" "next_" "Pla" "content::" "CreateV" "issue_nf" "fn trans" "ensure_video_can" "channel ownersh" "channel owne" "channel owners" "channe trans" "Trait" "Person" "SeriesP" "issue_nf" "create_vi" "create_video" "issue_nft" "create_video" "issuance" "VideoCrea" "set_pend" "transactional_status = " "issue_n" "let params" "param" "lsp" "str" "lsp" "validate_auc" "pub Trans" "Gove" "block_n" "impl" "valida" "block" "pub auction" "AccountId:" "issue_nf" "auction_params" "AuctionP" "pub TransactionalStatus" "Starts" "validate_auction_params" "validate_au" "auction" "set_pe" "transactional_status =" "issue_" "transactional_status" "ensure_new" "issue_" "transaction" "agenda" "face" "rustic" "group" "link" "w3" "rustic" "diff-add" "magit" "diff add" "diff-add" "diff" "face" "ts sy" "Upda" "accept_incoming rewa" "Meta" "unk" "issue_" "new" "issue_" "Issue" "issue_" "issue" "issu" "issue_" "StorageW" "StorageWG" "StorageW" "storage Tr" "crate::T" "pub storagewg" "issue" "issue_" "TransactionalStatus" "pub TransactionalStatus" "NftIssued" "Owned" "pub Transaction" "Transact" "pub TransactionalStatus" "Owned" "default" "AuctionP" "VideoPostType" "issue_nf"))
(setq consult--buffer-history '(#("*eshell*􀀁" 0 8 (face consult-buffer consult-multi (buffer . "*eshell*")) 8 9 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("Firefox-esr􀀁" 0 11 (face consult-buffer consult-multi (buffer . "Firefox-esr")) 11 12 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("*eshell*􀀁" 0 8 (face consult-buffer consult-multi (buffer . "*eshell*")) 8 9 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("todo.org􀀁" 0 8 (face consult-buffer consult-multi (buffer . "todo.org")) 8 9 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("work.org􀀁" 0 8 (face consult-buffer consult-multi (buffer . "work.org")) 8 9 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("todo.org􀀁" 0 8 (face consult-buffer consult-multi (buffer . "todo.org")) 8 9 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("primitives.rs􀀁" 0 13 (face consult-buffer consult-multi (buffer . "primitives.rs")) 13 14 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("*rustic-compilation*􀀁" 0 20 (face consult-buffer consult-multi (buffer . "*rustic-compilation*")) 20 21 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("mod.rs􀀁" 0 6 (face consult-buffer consult-multi (buffer . "mod.rs")) 6 7 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("lib.rs<runtime>􀀁" 0 15 (face consult-buffer consult-multi (buffer . "lib.rs<runtime>")) 15 16 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("lib.rs􀀁" 0 6 (face consult-buffer consult-multi (buffer . "lib.rs")) 6 7 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("Firefox-esr􀀁" 0 11 (face consult-buffer consult-multi (buffer . "Firefox-esr")) 11 12 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("lib.rs􀀁" 0 6 (face consult-buffer consult-multi (buffer . "lib.rs")) 6 7 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("Firefox-esr􀀁" 0 11 (face consult-buffer consult-multi (buffer . "Firefox-esr")) 11 12 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("types.rs<src>􀀁" 0 13 (face consult-buffer consult-multi (buffer . "types.rs<src>")) 13 14 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("lib.rs􀀁" 0 6 (face consult-buffer consult-multi (buffer . "lib.rs")) 6 7 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("Firefox-esr􀀁" 0 11 (face consult-buffer consult-multi (buffer . "Firefox-esr")) 11 12 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("magit: joystream􀀁" 0 16 (face consult-buffer consult-multi (buffer . "magit: joystream")) 16 17 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("*eshell*􀀁" 0 8 (face consult-buffer consult-multi (buffer . "*eshell*")) 8 9 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("lib.rs􀀁" 0 6 (face consult-buffer consult-multi (buffer . "lib.rs")) 6 7 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("Firefox-esr􀀁" 0 11 (face consult-buffer consult-multi (buffer . "Firefox-esr")) 11 12 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("*eshell*􀀁" 0 8 (face consult-buffer consult-multi (buffer . "*eshell*")) 8 9 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("issue_nft.rs􀀁" 0 12 (face consult-buffer consult-multi (buffer . "issue_nft.rs")) 12 13 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("*cargo-test*􀀁" 0 12 (face consult-buffer consult-multi (buffer . "*cargo-test*")) 12 13 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("lib.rs􀀁" 0 6 (consult-multi (buffer . "lib.rs") face consult-buffer) 6 7 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("types.rs􀀁" 0 8 (consult-multi (buffer . "types.rs") face consult-buffer) 8 9 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("lib.rs􀀁" 0 6 (consult-multi (buffer . "lib.rs") face consult-buffer) 6 7 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("types.rs􀀁" 0 8 (consult-multi (buffer . "types.rs") face consult-buffer) 8 9 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("mod.rs􀀁" 0 6 (consult-multi (buffer . "mod.rs") face consult-buffer) 6 7 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("Firefox-esr􀀁" 0 11 (consult-multi (buffer . "Firefox-esr") face consult-buffer) 11 12 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("lib.rs􀀁" 0 6 (consult-multi (buffer . "lib.rs") face consult-buffer) 6 7 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("types.rs􀀁" 0 8 (consult-multi (buffer . "types.rs") face consult-buffer) 8 9 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("lib.rs􀀁" 0 6 (consult-multi (buffer . "lib.rs") face consult-buffer) 6 7 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("Firefox-esr􀀁" 0 11 (consult-multi (buffer . "Firefox-esr") face consult-buffer) 11 12 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("types.rs􀀁" 0 8 (consult-multi (buffer . "types.rs") face consult-buffer) 8 9 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("mod.rs􀀁" 0 6 (consult-multi (buffer . "mod.rs") face consult-buffer) 6 7 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("types.rs􀀁" 0 8 (consult-multi (buffer . "types.rs") face consult-buffer) 8 9 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("mod.rs􀀁" 0 6 (consult-multi (buffer . "mod.rs") face consult-buffer) 6 7 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("types.rs􀀁" 0 8 (consult-multi (buffer . "types.rs") face consult-buffer) 8 9 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("lib.rs􀀁" 0 6 (consult-multi (buffer . "lib.rs") face consult-buffer) 6 7 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("mod.rs􀀁" 0 6 (consult-multi (buffer . "mod.rs") face consult-buffer) 6 7 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("types.rs􀀁" 0 8 (consult-multi (buffer . "types.rs") face consult-buffer) 8 9 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("lib.rs􀀁" 0 6 (consult-multi (buffer . "lib.rs") face consult-buffer) 6 7 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("*rustic-compilation*􀀁" 0 20 (consult-multi (buffer . "*rustic-compilation*") face consult-buffer) 20 21 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("Firefox-esr􀀁" 0 11 (consult-multi (buffer . "Firefox-esr") face consult-buffer) 11 12 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("types.rs􀀁" 0 8 (consult-multi (buffer . "types.rs") face consult-buffer) 8 9 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("Firefox-esr􀀁" 0 11 (consult-multi (buffer . "Firefox-esr") face consult-buffer) 11 12 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("types.rs􀀁" 0 8 (consult-multi (buffer . "types.rs") face consult-buffer) 8 9 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("*rustic-compilation*􀀁" 0 20 (consult-multi (buffer . "*rustic-compilation*") face consult-buffer) 20 21 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("types.rs􀀁" 0 8 (consult-multi (buffer . "types.rs") face consult-buffer) 8 9 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("Firefox-esr􀀁" 0 11 (consult-multi (buffer . "Firefox-esr") face consult-buffer) 11 12 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("zoom􀀁" 0 4 (consult-multi (buffer . "zoom") face consult-buffer) 4 5 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("lib.rs􀀁" 0 6 (consult-multi (buffer . "lib.rs") face consult-buffer) 6 7 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("types.rs􀀁" 0 8 (consult-multi (buffer . "types.rs") face consult-buffer) 8 9 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("start_nft_auction.rs􀀁" 0 20 (consult-multi (buffer . "start_nft_auction.rs") face consult-buffer) 20 21 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("lib.rs􀀁" 0 6 (consult-multi (buffer . "lib.rs") face consult-buffer) 6 7 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("issue_nft.rs􀀁" 0 12 (consult-multi (buffer . "issue_nft.rs") face consult-buffer) 12 13 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("mod.rs􀀁" 0 6 (consult-multi (buffer . "mod.rs") face consult-buffer) 6 7 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("start_nft_auction.rs􀀁" 0 20 (consult-multi (buffer . "start_nft_auction.rs") face consult-buffer) 20 21 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("mod.rs􀀁" 0 6 (consult-multi (buffer . "mod.rs") face consult-buffer) 6 7 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("lib.rs􀀁" 0 6 (consult-multi (buffer . "lib.rs") face consult-buffer) 6 7 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("mod.rs􀀁" 0 6 (consult-multi (buffer . "mod.rs") face consult-buffer) 6 7 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("merging_plan.org􀀁" 0 16 (consult-multi (buffer . "merging_plan.org") face consult-buffer) 16 17 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("lib.rs􀀁" 0 6 (consult-multi (buffer . "lib.rs") face consult-buffer) 6 7 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("mod.rs􀀁" 0 6 (consult-multi (buffer . "mod.rs") face consult-buffer) 6 7 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("lib.rs􀀁" 0 6 (consult-multi (buffer . "lib.rs") face consult-buffer) 6 7 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("mod.rs􀀁" 0 6 (consult-multi (buffer . "mod.rs") face consult-buffer) 6 7 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("*Customize Group: Calendar Faces*􀀁" 0 33 (face consult-buffer consult-multi (buffer . "*Customize Group: Calendar Faces*")) 33 34 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("*Calendar*􀀁" 0 10 (face consult-buffer consult-multi (buffer . "*Calendar*")) 10 11 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("almost-mono-themes.el􀀁" 0 21 (face consult-buffer consult-multi (buffer . "almost-mono-themes.el")) 21 22 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("Firefox-esr􀀁" 0 11 (face consult-buffer consult-multi (buffer . "Firefox-esr")) 11 12 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("almost-mono-themes.el􀀁" 0 21 (face consult-buffer consult-multi (buffer . "almost-mono-themes.el")) 21 22 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("*Customize Group: Eww*􀀁" 0 22 (face consult-buffer consult-multi (buffer . "*Customize Group: Eww*")) 22 23 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #(".emacs􀀁" 0 6 (face consult-buffer consult-multi (buffer . ".emacs")) 6 7 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("almost-mono-themes.el􀀁" 0 21 (face consult-buffer consult-multi (buffer . "almost-mono-themes.el")) 21 22 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("*Customize Apropos*􀀁" 0 19 (face consult-buffer consult-multi (buffer . "*Customize Apropos*")) 19 20 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("*Customize Group: Compilation*􀀁" 0 30 (face consult-buffer consult-multi (buffer . "*Customize Group: Compilation*")) 30 31 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("*Customize Group: Magit Faces*􀀁" 0 30 (face consult-buffer consult-multi (buffer . "*Customize Group: Magit Faces*")) 30 31 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("*Customize Group: Magit*􀀁" 0 24 (face consult-buffer consult-multi (buffer . "*Customize Group: Magit*")) 24 25 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("magit-diff: almost-mono-themes􀀁" 0 30 (face consult-buffer consult-multi (buffer . "magit-diff: almost-mono-themes")) 30 31 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("almost-mono-themes.el􀀁" 0 21 (face consult-buffer consult-multi (buffer . "almost-mono-themes.el")) 21 22 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("Firefox-esr<3>􀀁" 0 11 (face consult-buffer consult-multi (buffer . "Firefox-esr<3>")) 11 14 (face consult-buffer consult-multi (buffer . "Firefox-esr<3>")) 14 15 (consult-strip t invisible t rear-nonsticky t cursor-intangible t)) #("almost-mono-themes.el􀀁" 0 21 (consult-multi (buffer . "almost-mono-themes.el") face consult-buffer) 21 22 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("Firefox-esr<3>􀀁" 0 11 (consult-multi (buffer . "Firefox-esr<3>") face consult-buffer) 11 14 (consult-multi (buffer . "Firefox-esr<3>") face consult-buffer) 14 15 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("*Customize Apropos*􀀁" 0 19 (consult-multi (buffer . "*Customize Apropos*") face consult-buffer) 19 20 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("Firefox-esr<3>􀀁" 0 11 (consult-multi (buffer . "Firefox-esr<3>") face consult-buffer) 11 14 (consult-multi (buffer . "Firefox-esr<3>") face consult-buffer) 14 15 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("*Customize Apropos*􀀁" 0 19 (consult-multi (buffer . "*Customize Apropos*") face consult-buffer) 19 20 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #(".emacs􀀁" 0 6 (consult-multi (buffer . ".emacs") face consult-buffer) 6 7 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) "fir" #("*eshell*􀀁" 0 8 (consult-multi (buffer . "*eshell*") face consult-buffer) 8 9 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("*straight-process*􀀁" 0 18 (consult-multi (buffer . "*straight-process*") face consult-buffer) 18 19 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("Firefox-esr<2>􀀁" 0 11 (consult-multi (buffer . "Firefox-esr<2>") face consult-buffer) 11 14 (consult-multi (buffer . "Firefox-esr<2>") face consult-buffer) 14 15 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("habits.org􀀁" 0 10 (consult-multi (buffer . "habits.org") face consult-buffer) 10 11 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("*eshell*􀀁" 0 8 (consult-multi (buffer . "*eshell*") face consult-buffer) 8 9 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("habits.org􀀁" 0 10 (consult-multi (buffer . "habits.org") face consult-buffer) 10 11 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("Firefox-esr<2>􀀁" 0 11 (consult-multi (buffer . "Firefox-esr<2>") face consult-buffer) 11 14 (consult-multi (buffer . "Firefox-esr<2>") face consult-buffer) 14 15 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("*eshell*􀀁" 0 8 (consult-multi (buffer . "*eshell*") face consult-buffer) 8 9 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) "fir" #("magit: joystream􀀁" 0 16 (consult-multi (buffer . "magit: joystream") face consult-buffer) 16 17 (cursor-intangible t rear-nonsticky t invisible t consult-strip t)) #("magit-process: joystream􀀁" 0 24 (consult-multi (buffer . "magit-process: joystream") face consult-buffer) 24 25 (cursor-intangible t rear-nonsticky t invisible t consult-strip t))))
(setq counsel-M-x-history '(#("^corfu" 0 6 (ivy-index 0)) "corfu-global-mode" "corfu-global-mode" #("^eva bu" 0 7 (ivy-index 0)) "eval-buffer" #("^comment" 0 8 (ivy-index 0)) "comment-region" #("^eval-b" 0 7 (ivy-index 0)) "eval-buffer"))
(setq projectile-project-command-history '#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ()))
